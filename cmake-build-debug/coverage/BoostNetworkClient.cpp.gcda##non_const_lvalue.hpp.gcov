        -:    0:Source:/usr/include/boost/asio/detail/non_const_lvalue.hpp
        -:    0:Graph:/home/anthonytintul/CLionProjects/TLConsoleApplication/cmake-build-debug/CMakeFiles/TLConsoleApplication.dir/lib/BoostNetworkClient/BoostNetworkClient.cpp.gcno
        -:    0:Data:/home/anthonytintul/CLionProjects/TLConsoleApplication/cmake-build-debug/CMakeFiles/TLConsoleApplication.dir/lib/BoostNetworkClient/BoostNetworkClient.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// detail/non_const_lvalue.hpp
        -:    3:// ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        -:    4://
        -:    5:// Copyright (c) 2003-2020 Christopher M. Kohlhoff (chris at kohlhoff dot com)
        -:    6://
        -:    7:// Distributed under the Boost Software License, Version 1.0. (See accompanying
        -:    8:// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
        -:    9://
        -:   10:
        -:   11:#ifndef BOOST_ASIO_DETAIL_NON_CONST_LVALUE_HPP
        -:   12:#define BOOST_ASIO_DETAIL_NON_CONST_LVALUE_HPP
        -:   13:
        -:   14:#if defined(_MSC_VER) && (_MSC_VER >= 1200)
        -:   15:# pragma once
        -:   16:#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)
        -:   17:
        -:   18:#include <boost/asio/detail/config.hpp>
        -:   19:#include <boost/asio/detail/type_traits.hpp>
        -:   20:
        -:   21:#include <boost/asio/detail/push_options.hpp>
        -:   22:
        -:   23:namespace boost {
        -:   24:namespace asio {
        -:   25:namespace detail {
        -:   26:
        -:   27:template <typename T>
        -:   28:struct non_const_lvalue
        -:   29:{
        -:   30:#if defined(BOOST_ASIO_HAS_MOVE)
       9*:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
       9*:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
       9*:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_8write_opINS0_19basic_stream_socketINS0_2ip3tcpENS0_8executorEEENS0_17mutable_buffers_1EPKNS0_14mutable_bufferENS1_14transfer_all_tEZN18BoostNetworkClient16handleConnectionERKNS_6system10error_codeEEUlSI_mE_EEEC2ERSK_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_8write_opINS0_19basic_stream_socketINS0_2ip3tcpENS0_8executorEEENS0_17mutable_buffers_1EPKNS0_14mutable_bufferENS1_14transfer_all_tEZN18BoostNetworkClient17handleWriteHeaderERKNS_6system10error_codeEmEUlSI_mE0_EEEC2ERSK_:
    #####:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
    #####:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
    #####:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_8write_opINS0_19basic_stream_socketINS0_2ip3tcpENS0_8executorEEENS0_17mutable_buffers_1EPKNS0_14mutable_bufferENS1_14transfer_all_tEZN18BoostNetworkClient15handleWriteBodyERKNS_6system10error_codeEmEUlSI_mE_EEEC2ERSK_:
    #####:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
    #####:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
    #####:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_29read_until_delim_string_op_v1INS0_19basic_stream_socketINS0_2ip3tcpENS0_8executorEEENS0_19basic_streambuf_refISaIcEEEZN18BoostNetworkClient17handleWriteHeaderERKNS_6system10error_codeEmEUlSG_mE_EEEC2ERSI_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_17read_dynbuf_v1_opINS0_19basic_stream_socketINS0_2ip3tcpENS0_8executorEEENS0_19basic_streambuf_refISaIcEEENS1_19transfer_at_least_tEZN18BoostNetworkClient16handleReadHeaderERKNS_6system10error_codeEmEUlSH_mE_EEEC2ERSJ_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_17read_dynbuf_v1_opINS0_19basic_stream_socketINS0_2ip3tcpENS0_8executorEEENS0_19basic_streambuf_refISaIcEEENS1_19transfer_at_least_tEZN18BoostNetworkClient14handleReadBodyERKNS_6system10error_codeEmEUlSH_mE_EEEC2ERSJ_:
    #####:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
    #####:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
    #####:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient16manageConnectionEvEUlRKNS_6system10error_codeEE_EC2ERS8_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient16handleConnectionERKNS_6system10error_codeEEUlS7_mE_EC2ERS8_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient17handleWriteHeaderERKNS_6system10error_codeEmEUlS7_mE0_EC2ERS8_:
    #####:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
    #####:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
    #####:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient17handleWriteHeaderERKNS_6system10error_codeEmEUlS7_mE_EC2ERS8_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_14transfer_all_tEEC2ERS3_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient15handleWriteBodyERKNS_6system10error_codeEmEUlS7_mE_EC2ERS8_:
    #####:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
    #####:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
    #####:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient16handleReadHeaderERKNS_6system10error_codeEmEUlS7_mE_EC2ERS8_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueINS1_19transfer_at_least_tEEC2ERS3_:
        1:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
        1:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
        1:   36:  }
------------------
_ZN5boost4asio6detail16non_const_lvalueIZN18BoostNetworkClient14handleReadBodyERKNS_6system10error_codeEmEUlS7_mE_EC2ERS8_:
    #####:   31:  explicit non_const_lvalue(T& t)
        -:   32:    : value(static_cast<typename conditional<
        -:   33:        is_same<T, typename decay<T>::type>::value,
    #####:   34:          typename decay<T>::type&, T&&>::type>(t))
        -:   35:  {
    #####:   36:  }
------------------
        -:   37:
        -:   38:  typename conditional<is_same<T, typename decay<T>::type>::value,
        -:   39:      typename decay<T>::type&, typename decay<T>::type>::type value;
        -:   40:#else // defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)
        -:   41:  explicit non_const_lvalue(const typename decay<T>::type& t)
        -:   42:    : value(t)
        -:   43:  {
        -:   44:  }
        -:   45:
        -:   46:  typename decay<T>::type value;
        -:   47:#endif // defined(BOOST_ASIO_HAS_MOVE)
        -:   48:};
        -:   49:
        -:   50:} // namespace detail
        -:   51:} // namespace asio
        -:   52:} // namespace boost
        -:   53:
        -:   54:#include <boost/asio/detail/pop_options.hpp>
        -:   55:
        -:   56:#endif // BOOST_ASIO_DETAIL_NON_CONST_LVALUE_HPP
