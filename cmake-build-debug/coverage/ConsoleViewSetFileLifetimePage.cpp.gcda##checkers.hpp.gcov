        -:    0:Source:/home/anthonytintul/CLionProjects/TLConsoleApplication/include/Readers/checkers.hpp
        -:    0:Graph:/home/anthonytintul/CLionProjects/TLConsoleApplication/cmake-build-debug/CMakeFiles/TLConsoleApplication.dir/lib/Views/pages/ConsoleViewSetFileLifetimePage.cpp.gcno
        -:    0:Data:/home/anthonytintul/CLionProjects/TLConsoleApplication/cmake-build-debug/CMakeFiles/TLConsoleApplication.dir/lib/Views/pages/ConsoleViewSetFileLifetimePage.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <string>
        -:    3:#include <sstream>
        -:    4:#include <fstream>
        -:    5:
        -:    6:#define INIT_VALUE 0
        -:    7:#define SUCCESS 0
        -:    8:#define NO_DATA_WAS_READ 1
        -:    9:
        -:   10:#define DOWNLOAD_MODE 0
        -:   11:#define UPLOAD_MODE 1
        -:   12:#define MAX_MODE_VALUE 1
        -:   13:#define MAX_MODE_LENGTH 1
        -:   14:
        -:   15:
        -:   16:enum PASSWORD_ERROR {
        -:   17:    TOO_SHORT_PASSWORD = 2, TOO_LONG_PASSWORD
        -:   18:};
        -:   19:enum FILE_PATH_ERROR {
        -:   20:    NO_SUCH_FILE_IN_DIRECTORY = 2
        -:   21:};
        -:   22:enum FILE_LIFETIME_ERROR {
        -:   23:    OUT_OF_BORDER_LIFETIME = 2, NOT_LIFETIME_VALUE
        -:   24:};
        -:   25:enum MODE_ERROR {
        -:   26:    NOT_MODE_VALUE = 2, OUT_OF_BORDER_MODE
        -:   27:};
        -:   28:
        -:   29:
        -:   30:#define MIN_PASSWORD_LENGTH 4
        -:   31:#define MAX_PASSWORD_LENGTH 32
        -:   32:
        -:   33:#define MIN_FILE_LIFETIME_DAYS 1
        -:   34:#define MAX_FILE_LIFETIME_DAYS 7
        -:   35:#define MAX_FILE_LIFETIME_LENGTH 2
        -:   36:
        -:   37:using std::istream;
        -:   38:using std::ifstream;
        -:   39:using std::istringstream;
        -:   40:using std::string;
        -:   41:
        -:   42://---------------------------------------------------------------------------------
        -:   43:
        -:   44:template<class ReadingType>
        -:   45:class isValidFilePath {
        -:   46:public:
        -:   47:    isValidFilePath() = default;
        -:   48:
        -:   49:    int operator()(string &readData);
        -:   50:};
        -:   51:
        -:   52:template<class ReadingType>
        -:   53:int isValidFilePath<ReadingType>::operator()(string &readData) {
        -:   54:    if (readData.empty()) {
        -:   55:        return NO_DATA_WAS_READ;
        -:   56:    }
        -:   57:    ifstream tmp;
        -:   58:    tmp.open(readData);
        -:   59:    if (!tmp.is_open()) {
        -:   60:        return NO_SUCH_FILE_IN_DIRECTORY;
        -:   61:    }
        -:   62:    return SUCCESS;
        -:   63:}
        -:   64:
        -:   65://---------------------------------------------------------------------------------
        -:   66:
        -:   67:template<class ReadingType>
        -:   68:class isValidFilePassword {
        -:   69:public:
        -:   70:    isValidFilePassword() = default;
        -:   71:
        -:   72:    int operator()(string &readData);
        -:   73:};
        -:   74:
        -:   75:template<class ReadingType>
        -:   76:int isValidFilePassword<ReadingType>::operator()(string &readData) {
        -:   77:    if (readData.empty()) {
        -:   78:        return NO_DATA_WAS_READ;
        -:   79:    }
        -:   80:    if (readData.length() <= MIN_PASSWORD_LENGTH) {
        -:   81:        return TOO_SHORT_PASSWORD;
        -:   82:    }
        -:   83:    if (readData.length() >= MAX_PASSWORD_LENGTH) {
        -:   84:        return TOO_LONG_PASSWORD;
        -:   85:    }
        -:   86:    return SUCCESS;
        -:   87:}
        -:   88:
        -:   89://---------------------------------------------------------------------------------
        -:   90:
        -:   91:template<class ReadingType>
        -:   92:class isValidFileLifetime {
        -:   93:public:
        -:   94:    isValidFileLifetime() = default;
        -:   95:
        -:   96:    int operator()(string &readData);
        -:   97:};
        -:   98:
        -:   99:template<class ReadingType>
    #####:  100:int isValidFileLifetime<ReadingType>::operator()(string &readData) {
        -:  101:
    #####:  102:    if (readData.empty()) {
    %%%%%:  102-block  0
    #####:  103:        return NO_DATA_WAS_READ;
    %%%%%:  103-block  0
        -:  104:    }
    #####:  105:    if (readData.length() > MAX_FILE_LIFETIME_LENGTH) {
    %%%%%:  105-block  0
    #####:  106:        return OUT_OF_BORDER_LIFETIME;
    %%%%%:  106-block  0
        -:  107:    }
        -:  108:
    #####:  109:    bool isError = false;
        -:  110:
    #####:  111:    for (int i = 0; i < readData.length() && !isError; i++) {
    %%%%%:  111-block  0
    %%%%%:  111-block  1
    %%%%%:  111-block  2
    %%%%%:  111-block  3
    %%%%%:  111-block  4
    %%%%%:  111-block  5
    %%%%%:  111-block  6
    #####:  112:        if (readData[i] < '0' || readData[i] > '9') {
    %%%%%:  112-block  0
    %%%%%:  112-block  1
    %%%%%:  112-block  2
    %%%%%:  112-block  3
    %%%%%:  112-block  4
    %%%%%:  112-block  5
    %%%%%:  112-block  6
    #####:  113:            isError = true;
    %%%%%:  113-block  0
        -:  114:        }
        -:  115:    }
    #####:  116:    if (isError) {
    %%%%%:  116-block  0
    #####:  117:        return NOT_LIFETIME_VALUE;
    %%%%%:  117-block  0
        -:  118:    }
        -:  119:
    #####:  120:    ReadingType lifetime = INIT_VALUE;
    #####:  121:    istringstream basicIstringstream(readData);
    %%%%%:  121-block  0
    %%%%%:  121-block  1
    $$$$$:  121-block  2
    #####:  122:    basicIstringstream >> lifetime;
    %%%%%:  122-block  0
        -:  123:
    #####:  124:    if (lifetime < MIN_FILE_LIFETIME_DAYS || lifetime > MAX_FILE_LIFETIME_DAYS) {
    %%%%%:  124-block  0
    %%%%%:  124-block  1
    #####:  125:        return OUT_OF_BORDER_LIFETIME;
    %%%%%:  125-block  0
        -:  126:    }
        -:  127:
    #####:  128:    return SUCCESS;
    %%%%%:  128-block  0
        -:  129:}
        -:  130:
        -:  131://---------------------------------------------------------------------------------
        -:  132:
        -:  133:template<class ReadingType>
        -:  134:class isValidApplicationMode {
        -:  135:public:
        -:  136:    isValidApplicationMode() = default;
        -:  137:
        -:  138:    int operator()(string &readData);
        -:  139:};
        -:  140:
        -:  141:template<class ReadingType>
        -:  142:int isValidApplicationMode<ReadingType>::operator()(string &readData) {
        -:  143:    if (readData.empty()) {
        -:  144:        return NO_DATA_WAS_READ;
        -:  145:    }
        -:  146:    if (readData.length() > MAX_MODE_LENGTH) {
        -:  147:        return NOT_LIFETIME_VALUE;
        -:  148:    }
        -:  149:
        -:  150:    bool isError = false;
        -:  151:
        -:  152:    for (int i = 0; i < readData.length() && !isError; i++) {
        -:  153:        if (readData[i] < '0' || readData[i] > '9') {
        -:  154:            isError = true;
        -:  155:        }
        -:  156:    }
        -:  157:    if (isError) {
        -:  158:        return NOT_MODE_VALUE;
        -:  159:    }
        -:  160:
        -:  161:    ReadingType lifetime = INIT_VALUE;
        -:  162:    istringstream basicIstringstream(readData);
        -:  163:    basicIstringstream >> lifetime;
        -:  164:
        -:  165:    if (lifetime > MAX_MODE_VALUE) {
        -:  166:        return OUT_OF_BORDER_MODE;
        -:  167:    }
        -:  168:
        -:  169:    return SUCCESS;
        -:  170:}
        -:  171:
        -:  172://---------------------------------------------------------------------------------
