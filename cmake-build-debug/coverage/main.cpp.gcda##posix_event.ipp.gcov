        -:    0:Source:/usr/include/boost/asio/detail/impl/posix_event.ipp
        -:    0:Graph:/home/anthonytintul/CLionProjects/TLConsoleApplication/cmake-build-debug/CMakeFiles/TLConsoleApplication.dir/src/main.cpp.gcno
        -:    0:Data:/home/anthonytintul/CLionProjects/TLConsoleApplication/cmake-build-debug/CMakeFiles/TLConsoleApplication.dir/src/main.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// detail/impl/posix_event.ipp
        -:    3:// ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        -:    4://
        -:    5:// Copyright (c) 2003-2020 Christopher M. Kohlhoff (chris at kohlhoff dot com)
        -:    6://
        -:    7:// Distributed under the Boost Software License, Version 1.0. (See accompanying
        -:    8:// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
        -:    9://
        -:   10:
        -:   11:#ifndef BOOST_ASIO_DETAIL_IMPL_POSIX_EVENT_IPP
        -:   12:#define BOOST_ASIO_DETAIL_IMPL_POSIX_EVENT_IPP
        -:   13:
        -:   14:#if defined(_MSC_VER) && (_MSC_VER >= 1200)
        -:   15:# pragma once
        -:   16:#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)
        -:   17:
        -:   18:#include <boost/asio/detail/config.hpp>
        -:   19:
        -:   20:#if defined(BOOST_ASIO_HAS_PTHREADS)
        -:   21:
        -:   22:#include <boost/asio/detail/posix_event.hpp>
        -:   23:#include <boost/asio/detail/throw_error.hpp>
        -:   24:#include <boost/asio/error.hpp>
        -:   25:
        -:   26:#include <boost/asio/detail/push_options.hpp>
        -:   27:
        -:   28:namespace boost {
        -:   29:namespace asio {
        -:   30:namespace detail {
        -:   31:
        1:   32:posix_event::posix_event()
        1:   33:  : state_(0)
        1:   33-block  0
    $$$$$:   33-block  1
        -:   34:{
        -:   35:#if (defined(__MACH__) && defined(__APPLE__)) \
        -:   36:      || (defined(__ANDROID__) && (__ANDROID_API__ < 21))
        -:   37:  int error = ::pthread_cond_init(&cond_, 0);
        -:   38:#else // (defined(__MACH__) && defined(__APPLE__))
        -:   39:      // || (defined(__ANDROID__) && (__ANDROID_API__ < 21))
        -:   40:  ::pthread_condattr_t attr;
        1:   41:  ::pthread_condattr_init(&attr);
        1:   42:  int error = ::pthread_condattr_setclock(&attr, CLOCK_MONOTONIC);
        1:   43:  if (error == 0)
        1:   44:    error = ::pthread_cond_init(&cond_, &attr);
        1:   44-block  0
        -:   45:#endif // (defined(__MACH__) && defined(__APPLE__))
        -:   46:       // || (defined(__ANDROID__) && (__ANDROID_API__ < 21))
        -:   47:
        -:   48:  boost::system::error_code ec(error,
        1:   49:      boost::asio::error::get_system_category());
        1:   49-block  0
        1:   50:  boost::asio::detail::throw_error(ec, "event");
        1:   51:}
        1:   51-block  0
        -:   52:
        -:   53:} // namespace detail
        -:   54:} // namespace asio
        -:   55:} // namespace boost
        -:   56:
        -:   57:#include <boost/asio/detail/pop_options.hpp>
        -:   58:
        -:   59:#endif // defined(BOOST_ASIO_HAS_PTHREADS)
        -:   60:
        -:   61:#endif // BOOST_ASIO_DETAIL_IMPL_POSIX_EVENT_IPP
